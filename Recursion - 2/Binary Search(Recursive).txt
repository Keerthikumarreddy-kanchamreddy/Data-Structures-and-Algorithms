Problem statement
Given an integer sorted array (sorted in increasing order) and an element x, find the x in given array using binary search. Return the index of x.

Return -1 if x is not present in the given array. Note : If given array size is even, take first mid.
Input format :

Line 1 : Array size

Line 2 : Array elements (separated by space)

Line 3 : x (element to be searched)

Sample Input :
6
2 3 4 5 6 8 
5 
Sample Output:
3 
Hint : Use helper function to solve this question.


--------------------------------------------------------------------------------------------


public class solution {

	public static int binarySearch(int input[], int element) {
		// Write your code here
		int si= 0; 
		int ei = input.length-1;

		return binarySearch(input, element, si, ei);
	}

	public static int binarySearch(int arr[] , int target, int si, int ei){

		if(si > ei){
			return -1;
		}

		int mid = (si+ei)/2 ; 

		if(arr[mid] == target){
			return mid;
		}else if(target > arr[mid]){
			return binarySearch(arr, target, mid+1, ei);
		}else {
			return binarySearch(arr, target, si, mid-1);
		}

	}
}
