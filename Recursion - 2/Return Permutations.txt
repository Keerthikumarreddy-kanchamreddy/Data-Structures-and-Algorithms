Problem statement
Given a string S, find and return all the possible permutations of the input string.

Note 1 : The order of permutations is not important. Note 2 : If original string contains duplicate characters, permutations will also be duplicates.

Sample Input :
abc
Sample Output :
abc
acb
bac
bca
cab
cba

------------------------------------------------------------------------------------------


public class solution {
	
	public static String[] permutationOfString(String input){

		if(input.length() == 0){
			String ans[] = {""};
			return ans;
		}

		String[] smallans = permutationOfString(input.substring(1));
		String[] output = new String[input.length() * smallans.length];


		int k=0;
		for(int i=0; i<smallans.length; i++){

			for(int j=0; j<=smallans[i].length(); j++){
				output[k] = smallans[i].substring(0,j) + input.charAt(0)+smallans[i].substring(j);
				k++;
			}
		}

		return output;

	}
	
}
