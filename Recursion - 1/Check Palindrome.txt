Problem statement
Determine if a given string ‘S’ is a palindrome using recursion. Return a Boolean value of true if it is a palindrome and false if it is not.

Note: You are not required to print anything, just implement the function. Example:
Input: s = "racecar"
Output: true
Explanation: "racecar" is a palindrome.


Sample Input 1:
abbba
Sample Output 1:
true
Explanation Of Sample Input 1 :
“abbba” is a palindrome
Sample Input 2:
abcd
Sample Output 2:
false
Explanation Of Sample Input 2 :
“abcd” is not a palindrome.
Constraints:
0 <= |S| <= 10^6
where |S| represents the length of string S.


--------------------------------------------------------------------------------------------



public class Solution {
    public static boolean isPalindrome(String str) {
        // Write your code here.
        int ei = str.length()-1;
        int si =0;

        return helper(str, si, ei);
    }

    public static boolean helper(String str, int si, int ei){

        if(si >= ei){
            return true;
        }

        if(str.charAt(si) != str.charAt(ei)){
            return false;
        }

        return helper(str, si+1, ei-1);
    }
}


-----------------------------------------------------------------------------------------


public class Solution {
    public static boolean isPalindrome(String str) {
        // Write your code here.

        int n = str.length();

        if (n == 0 || n == 1){
            return true;
        }

        if(str.charAt(0) != str.charAt(n-1)){
            return false;
        }

        return isPalindrome(str.substring(1, n-1));
    }
}
