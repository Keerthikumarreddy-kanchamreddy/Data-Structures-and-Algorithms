Problem statement
Given an array consisting of positive and negative integers, find the length of the longest subarray whose sum is zero.


Constraints:
0 <= N <= 10^8
Time Limit: 1 sec


Sample Input 1:
10 
95 -97 -387 -435 -5 -70 897 127 23 284

Sample Output 1:
5

Explanation:
The five elements that form the longest subarray that sum up to zero are: -387, -435, -5, -70, 897 

Note :
You don't have to print anything. Just complete the definition of the function given and return the value accordingly.




---------------------------------------------------------------------------------------------



import java.util.*;

public class Solution {

	public static int lengthOfLongestSubsetWithZeroSum(int arr[]) {
		
		if(arr.length==0){
            return 0;
        }
            
        HashMap<Integer,Integer> h=new HashMap<>();
        int sum=0;
        int maxlength=0;
        int maxlength1=0;

        for(int i=0;i<arr.length;i++){
            sum=sum+arr[i];
            if(h.containsKey(sum)){
                int k=h.get(sum);
                int l=i-k;
                maxlength1=l;
            }else{
                h.put(sum,i);
            }
            
            if(sum==0){
                maxlength1=i+1;
            }
           
            if(maxlength1>maxlength){
                maxlength=maxlength1;
            } 
        }
        return maxlength;
	}
}