Problem statement
Given a singly linked list of integers, reverse it iteratively and return the head to the modified list.

 Note :
No need to print the list, it has already been taken care. Only return the new head to the list.


Sample Input 1 :
1
1 2 3 4 5 6 7 8 -1
Sample Output 1 :
8 7 6 5 4 3 2 1
Sample Input 2 :
2
10 -1
10 20 30 40 50 -1
Sample Output 2 :
10 
50 40 30 20 10


-----------------------------------------------------------------------------------------


/*************** 
     * Following is the Node class already written 
            class Node<T> {
                T data;
                Node<T> next;

                public Node(T data) {
                    this.data = data;
                }
            }
 ***************/

 public class Solution {

	public static Node<Integer> reverse_I(Node<Integer> head){

        if(head == null || head.next == null){
            return head;
        }

        Node<Integer> prev = null;
        Node<Integer> forw = head.next;
        Node<Integer> curr = head;


        while(forw != null){
            curr.next=prev;
            prev = curr;
            curr = forw;
            forw = forw.next;
        }

        curr.next = prev;

        return curr; 
	}
 }